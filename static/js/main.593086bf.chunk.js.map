{"version":3,"sources":["components/FilterField/FilterField.module.css","redux/contacts/contacts-type.js","redux/contacts/contacts-redusers.js","redux/store.js","redux/contacts/contacts-actions.js","components/ContactsForm/ContactsForm.jsx","utils/helter.js","components/Contacts/Contacts.jsx","components/FilterField/FilterField.jsx","App.js","index.js","components/ContactsForm/ContactsForm.module.css","components/Contacts/Contacts.module.css","App.module.css"],"names":["module","exports","items","createReducer","types","state","action","payload","filter","contact","id","_","combineReducers","contactsPersistConfig","key","storage","whitelist","contactsPersistedReducer","persistReducer","contactsReduser","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","addNewContact","createAction","name","number","v4","deleteContact","changeFilter","ContactsForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handlerOnChange","e","target","value","reset","onSubmit","verifyContact","preventDefault","map","item","toLowerCase","includes","alert","contactsActions","className","s","form","inputTitle","inputField","type","pattern","title","required","onChange","addContactBtn","Contacts","NormalizeFilter","contactsArr","contactsList","contactItem","contactsName","contactsNumber","delBtn","onClick","FilterField","filterTitle","filterInput","App","app","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,mC,iKCDhE,EACR,eADQ,EAEL,kBAFK,EAGE,wBCeXC,EAAQC,YAAc,IAAD,mBACxBC,GAAY,SAACC,EAAOC,GAAR,OAAoBA,EAAOC,SAA3B,mBAAuCF,OAD3B,cAGxBD,GAAe,SAACC,EAAOC,GAAR,OACdD,EAAMG,QAAO,SAACC,GAAD,OAAaA,EAAQC,KAAOJ,EAAOC,cAJzB,IAOrBC,EAASL,YAAc,GAAD,eACzBC,GAAsB,SAACO,EAAGL,GAAJ,OAAeA,EAAOC,YAGhCK,cAAgB,CAC7BV,MAAOA,EACPM,OAAQA,I,OCjBJK,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,UAGRC,EAA2BC,YAC/BL,EACAM,GAGWC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUN,GAEZO,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,WAKrDC,EAAYC,YAAaf,G,wCCrBvB,GAAEgB,cAZKC,YAAajC,GAAW,gBAAGkC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACnEhC,QAAS,CACPG,GAAI8B,cACJF,KAAMA,EACNC,OAAQA,OAQoBE,cAJVJ,YAAajC,GAIYsC,aAF1BL,YAAajC,I,uBCkEnBuC,MAxEf,WAEE,IAAMC,EAAWC,cACT3C,EAAU4C,aAAY,SAACzC,GAAD,OAAWA,EAAMkB,YAAvCrB,MAGR,EAAwB6C,mBAAS,IAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOR,EAAP,KAAeU,EAAf,KAEMC,EAAkB,SAACC,GACvB,MAAwBA,EAAEC,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAEd,OAAQf,GACN,IAAK,OAAQ,OAAOU,EAAQK,GAC5B,IAAK,SAAU,OAAOJ,EAAUI,GAChC,QAAS,SAWPC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAMV,OACE,uBAAMM,SAhBc,SAACJ,GC3BQ,IAAWK,ED4B1CL,EAAEM,iBC5BwCD,ED6BflB,EAAPpC,EC5BSwD,KAAI,SAACC,GAAD,OAAUA,EAAKrB,KAAKsB,iBAElCC,SAASL,EAAcI,eD0BPE,MAAM,GAAD,OAAIxB,EAAJ,6BAAsCM,EAASmB,EAAgB3B,cAAc,CAAEE,OAAMC,YAE7He,KAYmCU,UAAWC,IAAEC,KAA9C,UACE,wBAAOF,UAAWC,IAAEE,WAApB,kBACE,uBAAOH,UAAWC,IAAEG,WAClBC,KAAK,OACLhB,MAAOf,EACPA,KAAK,OACLgC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUvB,OAId,wBAAOc,UAAWC,IAAEE,WAApB,oBACE,uBAAOH,UAAWC,IAAEG,WAClBC,KAAK,MACLhB,MAAOd,EACPD,KAAK,SACLgC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUvB,OAId,wBAAQc,UAAWC,IAAES,cAAeL,KAAK,SAAzC,6B,gBEtBOM,EAxCE,WAEf,IAAM/B,EAAWC,cACjB,EAA0BC,aAAY,SAACzC,GAAD,OAAWA,EAAMkB,YAA/CrB,EAAR,EAAQA,MAGF0E,EAHN,EAAepE,OAGgBoD,cAEzBiB,EAAe3E,EAAMM,QAAO,SAACmD,GAAD,OAC9BA,EAAKrB,KAAKsB,cAAcC,SAASe,MAIrC,OACE,oBAAIZ,UAAWC,IAAEa,aAAjB,SACGD,EAAYnB,KAAI,gBAAGpB,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQ7B,EAAjB,EAAiBA,GAAjB,OACf,qBAAasD,UAAWC,IAAEc,YAA1B,UACE,oBAAGf,UAAWC,IAAEe,aAAhB,cAAgC1C,EAAhC,KAAuC,sBAAM0B,UAAWC,IAAEgB,eAAnB,SAAoC1C,OAC3E,wBAAQyB,UAAWC,IAAEiB,OAAQC,QAAS,kBAAKvC,EAASmB,EAAgBtB,cAAc/B,KAAM2D,KAAK,SAA7F,sBAFO3D,S,iBCEF0E,EAlBK,WAElB,IAAQ5E,EAAWsC,aAAY,SAACzC,GAAD,OAAWA,EAAMkB,YAAxCf,OACFoC,EAAWC,cAGjB,OACE,wBAAOmB,UAAWC,IAAEoB,YAApB,mCACE,uBAAOrB,UAAWC,IAAEqB,YAAajB,KAAK,OAAOhB,MAAO7C,EAAQiE,SAAU,SAACtB,GAAD,OAAOP,EAASmB,EAAgBrB,aAAaS,EAAEC,OAAOC,eCInHkC,MAZf,WACE,OACE,sBAAKvB,UAAWC,IAAEuB,IAAlB,UACE,oBAAIxB,UAAWC,IAAEM,MAAjB,uBACA,cAAC,EAAD,IACA,oBAAIP,UAAWC,IAAEM,MAAjB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLNkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAawE,QAAS,KAAM1D,UAAWA,EAAvC,SACE,cAAC,EAAD,UAIN2D,SAASC,eAAe,U,kBCf1B9F,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,iCAAiC,WAAa,iCAAiC,cAAgB,sC,kBCAhKD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,YAAc,8BAA8B,aAAe,+BAA+B,eAAiB,iCAAiC,OAAS,2B,kBCArND,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,sB","file":"static/js/main.593086bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"FilterField_filterTitle__3Ek9F\",\"filterInput\":\"FilterField_filterInput__1dQlz\"};","export default {\r\n  ADD: \"contacts/add\",\r\n  DELETE: \"contacts/delete\",\r\n  CHANGE_FILTER: \"contacts/changeFilter\",\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport types from \"./contacts-type\";\r\n\r\n// const items = createReducer([], {\r\n//   [types.ADD]: (state, action) => {\r\n//     const contactsNames = state.map((item) => item.name.toLowerCase());\r\n\r\n//     if (contactsNames.includes(action.payload.name.toLowerCase())) {\r\n//       alert(`${action.payload.name} is already in contacts.`);\r\n//       return state;\r\n//     } else {\r\n//       return [action.payload, ...state];\r\n//     }\r\n//   },\r\n\r\n//КОД ВЫШЕ ОСТАВИЛ ДЛЯ СЕБЯ\r\n\r\nconst items = createReducer([], {\r\n  [types.ADD]: (state, action) => [action.payload, ...state],\r\n\r\n  [types.DELETE]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [types.CHANGE_FILTER]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: items,\r\n  filter: filter,\r\n});\r\n","import storage from \"redux-persist/lib/storage\";\r\nimport contactsReduser from \"./contacts/contacts-redusers\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  whitelist: [\"items\"],\r\n};\r\n\r\nconst contactsPersistedReducer = persistReducer(\r\n  contactsPersistConfig,\r\n  contactsReduser\r\n);\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsPersistedReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport types from \"./contacts-type\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst addNewContact = createAction(types.ADD, ({ name, number }) => ({\r\n  payload: {\r\n    id: v4(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(types.DELETE);\r\n\r\nconst changeFilter = createAction(types.CHANGE_FILTER);\r\n\r\nexport default { addNewContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactsForm.module.css'\nimport { isAlreadyHasContact } from '../../utils/helter';\n\n\nfunction ContactsForm() {\n\n  const dispatch = useDispatch();\n  const { items } = useSelector((state) => state.contacts)\n  \n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handlerOnChange = (e) => {\n    const { name, value } = e.target\n    \n    switch (name) {\n      case 'name': return setName(value);\n      case 'number': return setNumber(value);\n      default: return;\n    }\n  }\n\n  const hendlerOnSubmit = (e) => {\n    e.preventDefault();\n    isAlreadyHasContact(items, name) ? alert(`${name} is already in contacts.`) : dispatch(contactsActions.addNewContact({ name, number }))\n    \n    reset()\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('')\n  }\n\n\n\n  \n    return (\n      <form onSubmit={hendlerOnSubmit} className={s.form}>\n        <label className={s.inputTitle}> Name\n          <input className={s.inputField}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handlerOnChange}\n          />\n        </label>\n\n        <label className={s.inputTitle}> Number\n          <input className={s.inputField}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handlerOnChange}\n          />\n        </label>\n\n        <button className={s.addContactBtn} type='submit'>Add Contact</button>\n      </form>\n    )\n  }\n\n\nContactsForm.propTypes = {\n    addNewContact: PropTypes.func\n}\n  \n\n\nexport default ContactsForm;","export const isAlreadyHasContact = (contacts, verifyContact) => {\r\n  const contactsNames = contacts.map((item) => item.name.toLowerCase());\r\n\r\n  return contactsNames.includes(verifyContact.toLowerCase());\r\n};\r\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions'; \n\n\nconst Contacts = () => {\n  \n  const dispatch = useDispatch();\n  const { items, filter } = useSelector((state) => state.contacts)\n\n\n  const NormalizeFilter = filter.toLowerCase();\n\n  const contactsArr =  items.filter((item) =>\n      item.name.toLowerCase().includes(NormalizeFilter)\n  );\n  \n\n  return (\n    <ul className={s.contactsList}>\n      {contactsArr.map(({ name, number, id}) =>\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactsName}> {name}: <span className={s.contactsNumber}>{number}</span></p> \n          <button className={s.delBtn} onClick={()=> dispatch(contactsActions.deleteContact(id))} type=\"button\">Delete</button>\n        </li>)\n      \n      }\n    </ul>\n    \n  )\n}\n\nContacts.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n      \n  ),\n  deleteContact: PropTypes.func\n  \n}\n\nexport default Contacts;\n","import s from './FilterField.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions'; \n\n\nconst FilterField = () => {\n\n  const { filter } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n\n  return (\n    <label className={s.filterTitle}> Find contacts by name\n      <input className={s.filterInput} type=\"text\" value={filter} onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}/>\n    </label>\n  )\n}\n\nFilterField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default FilterField;","import s from \"./App.module.css\";\nimport \"./App.module.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport Contacts from \"./components/Contacts\";\nimport FilterField from \"./components/FilterField\";\n\nfunction App() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactsForm />\n      <h2 className={s.title}>Contacts</h2>\n      <FilterField />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3ohwa\",\"inputTitle\":\"ContactsForm_inputTitle__2vPVU\",\"inputField\":\"ContactsForm_inputField__1Tedy\",\"addContactBtn\":\"ContactsForm_addContactBtn__3OTYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__xSCl5\",\"contactItem\":\"Contacts_contactItem__Wkfr_\",\"contactsName\":\"Contacts_contactsName__1O_7-\",\"contactsNumber\":\"Contacts_contactsNumber__3K53I\",\"delBtn\":\"Contacts_delBtn__1qeaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3vpGB\",\"title\":\"App_title__2-jbU\"};"],"sourceRoot":""}